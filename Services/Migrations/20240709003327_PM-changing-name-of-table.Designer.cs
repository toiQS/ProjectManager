// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Services;

#nullable disable

namespace Services.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240709003327_PM-changing-name-of-table")]
    partial class PMchangingnameoftable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Models.Member_In_Project", b =>
                {
                    b.Property<int>("MemberID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberID"));

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("MemberID");

                    b.HasIndex("ProjectID");

                    b.HasIndex("RoleID");

                    b.HasIndex("UserID");

                    b.ToTable("Member_In_Projects");

                    b.HasData(
                        new
                        {
                            MemberID = 1,
                            ProjectID = 1,
                            RoleID = 1,
                            UserID = 1
                        },
                        new
                        {
                            MemberID = 2,
                            ProjectID = 1,
                            RoleID = 2,
                            UserID = 2
                        },
                        new
                        {
                            MemberID = 3,
                            ProjectID = 1,
                            RoleID = 3,
                            UserID = 3
                        },
                        new
                        {
                            MemberID = 4,
                            ProjectID = 2,
                            RoleID = 2,
                            UserID = 4
                        },
                        new
                        {
                            MemberID = 5,
                            ProjectID = 2,
                            RoleID = 3,
                            UserID = 5
                        },
                        new
                        {
                            MemberID = 6,
                            ProjectID = 3,
                            RoleID = 4,
                            UserID = 1
                        },
                        new
                        {
                            MemberID = 7,
                            ProjectID = 3,
                            RoleID = 5,
                            UserID = 2
                        });
                });

            modelBuilder.Entity("Models.Member_In_Task", b =>
                {
                    b.Property<int>("Member_In_Task_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Member_In_Task_ID"));

                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectID")
                        .HasColumnType("int");

                    b.Property<int>("TaskID")
                        .HasColumnType("int");

                    b.HasKey("Member_In_Task_ID");

                    b.HasIndex("MemberID");

                    b.HasIndex("ProjectID");

                    b.HasIndex("TaskID");

                    b.ToTable("Member_In_Tasks");

                    b.HasData(
                        new
                        {
                            Member_In_Task_ID = 1,
                            MemberID = 1,
                            TaskID = 1
                        },
                        new
                        {
                            Member_In_Task_ID = 2,
                            MemberID = 2,
                            TaskID = 1
                        },
                        new
                        {
                            Member_In_Task_ID = 3,
                            MemberID = 3,
                            TaskID = 2
                        },
                        new
                        {
                            Member_In_Task_ID = 4,
                            MemberID = 4,
                            TaskID = 3
                        },
                        new
                        {
                            Member_In_Task_ID = 5,
                            MemberID = 5,
                            TaskID = 4
                        },
                        new
                        {
                            Member_In_Task_ID = 6,
                            MemberID = 6,
                            TaskID = 5
                        });
                });

            modelBuilder.Entity("Models.Project", b =>
                {
                    b.Property<int>("ProjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectID"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity_Member_Requied")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ProjectID");

                    b.HasIndex("StatusID");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            ProjectID = 1,
                            CreateAt = new DateTime(2024, 7, 9, 7, 33, 27, 270, DateTimeKind.Local).AddTicks(7192),
                            EndAt = new DateTime(2024, 8, 9, 7, 33, 27, 270, DateTimeKind.Local).AddTicks(7213),
                            ProjectDescription = "Description for Project Alpha",
                            ProjectInfo = "First project",
                            ProjectName = "Project Alpha",
                            Quantity_Member_Requied = 5,
                            StartAt = new DateTime(2024, 7, 10, 7, 33, 27, 270, DateTimeKind.Local).AddTicks(7205),
                            StatusID = 1,
                            UserID = 1
                        },
                        new
                        {
                            ProjectID = 2,
                            CreateAt = new DateTime(2024, 7, 9, 7, 33, 27, 270, DateTimeKind.Local).AddTicks(7221),
                            EndAt = new DateTime(2024, 9, 9, 7, 33, 27, 270, DateTimeKind.Local).AddTicks(7222),
                            ProjectDescription = "Description for Project Beta",
                            ProjectInfo = "Second project",
                            ProjectName = "Project Beta",
                            Quantity_Member_Requied = 4,
                            StartAt = new DateTime(2024, 7, 11, 7, 33, 27, 270, DateTimeKind.Local).AddTicks(7221),
                            StatusID = 2,
                            UserID = 2
                        },
                        new
                        {
                            ProjectID = 3,
                            CreateAt = new DateTime(2024, 7, 9, 7, 33, 27, 270, DateTimeKind.Local).AddTicks(7223),
                            EndAt = new DateTime(2024, 10, 9, 7, 33, 27, 270, DateTimeKind.Local).AddTicks(7224),
                            ProjectDescription = "Description for Project Gamma",
                            ProjectInfo = "Third project",
                            ProjectName = "Project Gamma",
                            Quantity_Member_Requied = 6,
                            StartAt = new DateTime(2024, 7, 12, 7, 33, 27, 270, DateTimeKind.Local).AddTicks(7224),
                            StatusID = 3,
                            UserID = 3
                        });
                });

            modelBuilder.Entity("Models.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<string>("RoleInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleID = 1,
                            RoleInfo = "Manages the project",
                            RoleName = "Manager"
                        },
                        new
                        {
                            RoleID = 2,
                            RoleInfo = "Develops the project",
                            RoleName = "Developer"
                        },
                        new
                        {
                            RoleID = 3,
                            RoleInfo = "Tests the project",
                            RoleName = "Tester"
                        },
                        new
                        {
                            RoleID = 4,
                            RoleInfo = "Designs the project",
                            RoleName = "Designer"
                        },
                        new
                        {
                            RoleID = 5,
                            RoleInfo = "Analyzes the project",
                            RoleName = "Analyst"
                        });
                });

            modelBuilder.Entity("Models.Status", b =>
                {
                    b.Property<int>("StatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusID"));

                    b.Property<string>("StatusInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusID");

                    b.ToTable("Statuss");

                    b.HasData(
                        new
                        {
                            StatusID = 1,
                            StatusInfo = "Project is open",
                            StatusName = "Open"
                        },
                        new
                        {
                            StatusID = 2,
                            StatusInfo = "Project is in progress",
                            StatusName = "In Progress"
                        },
                        new
                        {
                            StatusID = 3,
                            StatusInfo = "Project is completed",
                            StatusName = "Completed"
                        },
                        new
                        {
                            StatusID = 4,
                            StatusInfo = "Project is on hold",
                            StatusName = "On Hold"
                        });
                });

            modelBuilder.Entity("Models.Task_In_Project", b =>
                {
                    b.Property<int>("TaskID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskID"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("TaskDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaskLevelID")
                        .HasColumnType("int");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TaskID");

                    b.HasIndex("TaskLevelID");

                    b.ToTable("Task_In_Projects");

                    b.HasData(
                        new
                        {
                            TaskID = 1,
                            CreateAt = new DateTime(2024, 7, 9, 7, 33, 27, 270, DateTimeKind.Local).AddTicks(7260),
                            EndAt = new DateTime(2024, 7, 16, 7, 33, 27, 270, DateTimeKind.Local).AddTicks(7262),
                            ProjectID = 1,
                            StartAt = new DateTime(2024, 7, 10, 7, 33, 27, 270, DateTimeKind.Local).AddTicks(7261),
                            TaskDescription = "Setup project environment",
                            TaskLevelID = 1,
                            TaskName = "Initial Setup"
                        },
                        new
                        {
                            TaskID = 2,
                            CreateAt = new DateTime(2024, 7, 9, 7, 33, 27, 270, DateTimeKind.Local).AddTicks(7263),
                            EndAt = new DateTime(2024, 7, 23, 7, 33, 27, 270, DateTimeKind.Local).AddTicks(7265),
                            ProjectID = 2,
                            StartAt = new DateTime(2024, 7, 10, 7, 33, 27, 270, DateTimeKind.Local).AddTicks(7264),
                            TaskDescription = "Analyze requirements",
                            TaskLevelID = 2,
                            TaskName = "Requirement Analysis"
                        },
                        new
                        {
                            TaskID = 3,
                            CreateAt = new DateTime(2024, 7, 9, 7, 33, 27, 270, DateTimeKind.Local).AddTicks(7266),
                            EndAt = new DateTime(2024, 7, 19, 7, 33, 27, 270, DateTimeKind.Local).AddTicks(7267),
                            ProjectID = 1,
                            StartAt = new DateTime(2024, 7, 11, 7, 33, 27, 270, DateTimeKind.Local).AddTicks(7266),
                            TaskDescription = "Design the user interface",
                            TaskLevelID = 3,
                            TaskName = "UI Design"
                        },
                        new
                        {
                            TaskID = 4,
                            CreateAt = new DateTime(2024, 7, 9, 7, 33, 27, 270, DateTimeKind.Local).AddTicks(7268),
                            EndAt = new DateTime(2024, 7, 29, 7, 33, 27, 270, DateTimeKind.Local).AddTicks(7269),
                            ProjectID = 2,
                            StartAt = new DateTime(2024, 7, 12, 7, 33, 27, 270, DateTimeKind.Local).AddTicks(7269),
                            TaskDescription = "Develop the backend",
                            TaskLevelID = 1,
                            TaskName = "Backend Development"
                        },
                        new
                        {
                            TaskID = 5,
                            CreateAt = new DateTime(2024, 7, 9, 7, 33, 27, 270, DateTimeKind.Local).AddTicks(7270),
                            EndAt = new DateTime(2024, 7, 24, 7, 33, 27, 270, DateTimeKind.Local).AddTicks(7271),
                            ProjectID = 3,
                            StartAt = new DateTime(2024, 7, 13, 7, 33, 27, 270, DateTimeKind.Local).AddTicks(7271),
                            TaskDescription = "Test the application",
                            TaskLevelID = 2,
                            TaskName = "Testing"
                        });
                });

            modelBuilder.Entity("Models.Task_Level", b =>
                {
                    b.Property<int>("TaskLevelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskLevelID"));

                    b.Property<string>("TaskInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TaskParentID")
                        .HasColumnType("int");

                    b.HasKey("TaskLevelID");

                    b.HasIndex("TaskParentID");

                    b.ToTable("Task_Level");

                    b.HasData(
                        new
                        {
                            TaskLevelID = 1,
                            TaskInfo = "High priority",
                            TaskName = "High"
                        },
                        new
                        {
                            TaskLevelID = 2,
                            TaskInfo = "Medium priority",
                            TaskName = "Medium"
                        },
                        new
                        {
                            TaskLevelID = 3,
                            TaskInfo = "Low priority",
                            TaskName = "Low"
                        });
                });

            modelBuilder.Entity("Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            Email = "john.doe@example.com",
                            Password = "password123",
                            UserName = "john_doe"
                        },
                        new
                        {
                            UserID = 2,
                            Email = "jane.smith@example.com",
                            Password = "password123",
                            UserName = "jane_smith"
                        },
                        new
                        {
                            UserID = 3,
                            Email = "alice.jones@example.com",
                            Password = "password123",
                            UserName = "alice_jones"
                        },
                        new
                        {
                            UserID = 4,
                            Email = "bob.brown@example.com",
                            Password = "password123",
                            UserName = "bob_brown"
                        },
                        new
                        {
                            UserID = 5,
                            Email = "charlie.davis@example.com",
                            Password = "password123",
                            UserName = "charlie_davis"
                        });
                });

            modelBuilder.Entity("Models.Member_In_Project", b =>
                {
                    b.HasOne("Models.Project", "Project")
                        .WithMany("Members")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Models.Member_In_Task", b =>
                {
                    b.HasOne("Models.Member_In_Project", "Member_In_Project")
                        .WithMany()
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Project", null)
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectID");

                    b.HasOne("Models.Task_In_Project", "Task_In_Project")
                        .WithMany()
                        .HasForeignKey("TaskID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member_In_Project");

                    b.Navigation("Task_In_Project");
                });

            modelBuilder.Entity("Models.Project", b =>
                {
                    b.HasOne("Models.Status", "Status")
                        .WithMany("Projects")
                        .HasForeignKey("StatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Models.Task_In_Project", b =>
                {
                    b.HasOne("Models.Task_Level", "TaskLevel")
                        .WithMany()
                        .HasForeignKey("TaskLevelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaskLevel");
                });

            modelBuilder.Entity("Models.Task_Level", b =>
                {
                    b.HasOne("Models.Task_Level", "TaskParent")
                        .WithMany("SubTasks")
                        .HasForeignKey("TaskParentID");

                    b.Navigation("TaskParent");
                });

            modelBuilder.Entity("Models.Project", b =>
                {
                    b.Navigation("Members");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("Models.Status", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("Models.Task_Level", b =>
                {
                    b.Navigation("SubTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
